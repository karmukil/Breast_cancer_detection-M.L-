import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.datasets import load_breast_cancer
cancer=load_breast_cancer()
cancer.keys()
dict_keys(['data', 'target', 'target_names', 'DESCR', 'feature_names', 'filename'])
print(cancer['DESCR'])
 print(cancer['target'])
print(cancer['target_names'])
print(cancer['feature_names'])
cancer['data'].shape
df_cancer=pd.DataFrame(np.c_[cancer['data'],cancer['target']],columns=np.append(cancer['feature_names'],['target']))
df_cancer.head()
sns.pairplot(df_cancer,hue='target',vars=['mean radius','mean texture','mean area','mean perimeter','mean smoothness'])
sns.countplot(df_cancer['target'])
sns.scatterplot(x='mean area',y='mean smoothness',hue='target',data=df_cancer)
plt.figure(figsize=(20,10))
sns.heatmap(df_cancer.corr(),annot=True)
X=df_cancer.drop(['target'],axis=1)
y=df_cancer['target']
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import classification_report,confusion_matrix 
svc_model=SVC()
svc_model.fit(X_train,y_train)
y_predict=svc_model.predict(X_test)
cm=confusion_matrix(y_test,y_predict)
sns.heatmap(cm,annot=True)
min_train=X_train.min()
range_train=(X_train-min_train).max()
X_train_scaled=(X_train-min_train)/range_train
sns.scatterplot(x=X_train['mean area'],y=X_train['mean smoothness'],hue=y_train)
min_test=X_test.min()
range_test=(X_test-min_test).max()
X_test_scaled=(X_test-min_test)/range_test
svc_model.fit(X_train_scaled,y_train)
y_predict=svc_model.predict(X_test_scaled)
cm=confusion_matrix(y_test,y_predict)
sns.heatmap(cm,annot=True)
print(classification_report(y_test,y_predict))
#end
